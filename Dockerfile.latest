# Build stage
FROM debian:stable-slim AS builder
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies in a single layer
RUN dpkg --add-architecture i386 \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        wget \
        unzip \
        curl \
        jq \
        bbe \
    && rm -rf /var/lib/apt/lists/*

# Create output directory structure
WORKDIR /output

# Download and extract game files
ARG STATIC_URL_BASEGAME
RUN mkdir -p main/ \
    && curl -SL "$STATIC_URL_BASEGAME" -o rtcw.zip \
    && unzip -d main rtcw.zip \
    && rm rtcw.zip \
    && unzip main/mp_bin.pk3 -d main \
    && rm -rf main/*.dll

# Setup RTCWPro
COPY fetchRtcwPro.sh .
RUN datapath="/output/rtcwpro-data" bash fetchRtcwPro.sh "182085729" \
    && mv rtcwpro-data/rtcwpro . \
    && mv rtcwpro-data/wolfded.x86 . \
    && rm -rf rtcwpro-data

# Runtime stage
FROM debian:stable-slim
ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies in a single layer
RUN dpkg --add-architecture i386 \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        wget \
        libc6-i386 \
        libc6:i386 \
        unzip \
        git \
        bbe \
        qstat \
    && rm -rf /var/lib/apt/lists/*

# Install additional tools in a single layer
RUN wget -qO /usr/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 \
    && echo "1fffde9f3c7944f063265e9a5e67ae4f $(sha256sum /usr/bin/jq | cut -d' ' -f1)" | md5sum -c \
    && chmod +x /usr/bin/jq \
    && wget -qO /bin/icecon https://github.com/icedream/icecon/releases/download/v1.0.0/icecon_linux_amd64 \
    && chmod +x /bin/icecon \
    && wget -qO libstdc++2.deb http://archive.debian.org/debian/pool/main/g/gcc-2.95/libstdc++2.10-glibc2.2_2.95.4-27_i386.deb \
    && echo "fa8e4293fa233399a2db248625355a77 $(sha256sum libstdc++2.deb | cut -d' ' -f1)" | md5sum -c \
    && dpkg -i libstdc++2.deb \
    && rm libstdc++2.deb

# Setup game user and environment
RUN useradd -ms /bin/bash game
WORKDIR /home/game

# Copy game files and scripts
COPY --chown=game:game --from=builder /output/ .
COPY --chown=game:game entrypoint.sh ./start
COPY --chown=game:game autorestart.sh ./autorestart

RUN chmod +x start autorestart \
    && if [ -n "${PAT_TOKEN}" ]; then \
       git clone --depth 1 --single-branch "https://${PAT_TOKEN}@github.com/Oksii/rtcw-config-priv.git" settings/; \
    else \
       echo "Error: PAT_TOKEN not provided" && exit 1; \
    fi \
    && rm -rf settings/.git

USER game
EXPOSE 27960/udp
ENTRYPOINT ["./start"]
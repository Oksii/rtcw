# Build stage
FROM debian:stable-slim AS builder
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies in a single layer
RUN dpkg --add-architecture i386 \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        wget \
        unzip \
        curl \
        jq \
        bbe \
        ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create output directory structure
WORKDIR /output

# Download and extract game files
ARG STATIC_URL_BASEGAME
RUN set -e \
    && mkdir -p /output/main \
    && echo "Downloading from: $STATIC_URL_BASEGAME" \
    && curl -v -SLk "$STATIC_URL_BASEGAME" -o /output/rtcw.zip \
    && unzip -d /output/main /output/rtcw.zip \
    && rm /output/rtcw.zip \
    && unzip /output/main/mp_bin.pk3 -d /output/main \
    && rm -rf /output/main/*.dll

# Setup RTCWPro
COPY fetchRtcwPro.sh /output/
RUN set -e \
    && datapath="/output/rtcwpro-data" bash /output/fetchRtcwPro.sh "182085729" \
    && mv /output/rtcwpro-data/rtcwpro /output/ \
    && mv /output/rtcwpro-data/wolfded.x86 /output/ \
    && rm -rf /output/rtcwpro-data

# Runtime stage
FROM debian:stable-slim
ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies in a single layer
RUN dpkg --add-architecture i386 \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        wget \
        libc6-i386 \
        libc6:i386 \
        unzip \
        git \
        bbe \
        qstat \
    && rm -rf /var/lib/apt/lists/*

RUN wget https://github.com/icedream/icecon/releases/download/v1.0.0/icecon_linux_amd64 && \
    mv icecon_linux_amd64 /bin/icecon && \
    chmod +x /bin/icecon

RUN wget http://archive.debian.org/debian/pool/main/g/gcc-2.95/libstdc++2.10-glibc2.2_2.95.4-27_i386.deb && \
    md5sum libstdc++2.10-glibc2.2_2.95.4-27_i386.deb | cut -d' ' -f1 | grep fa8e4293fa233399a2db248625355a77 && \
    dpkg -i libstdc++2.10-glibc2.2_2.95.4-27_i386.deb && \
    rm -rf libstdc++2.10-glibc2.2_2.95.4-27_i386.deb

# Setup game user and environment
RUN useradd -ms /bin/bash game
WORKDIR /home/game

# Copy game files and scripts
COPY --chown=game:game --from=builder /output/ .
COPY --chown=game:game entrypoint.sh ./start
COPY --chown=game:game autorestart.sh ./autorestart

RUN chmod +x start autorestart

# Clone legacy-config repository (make PAT_TOKEN optional)
ARG PAT_TOKEN=""
RUN if [ -n "${PAT_TOKEN}" ]; then \
        git clone --depth 1 "https://${PAT_TOKEN}@github.com/Oksii/rtcw-config-priv.git" settings/; \
    else \
        git clone --depth 1 "https://github.com/Oksii/rtcw-config-priv.git" settings/; \
    fi \
    && rm -rf settings/.git

USER game
EXPOSE 27960/udp
ENTRYPOINT ["./start"]